name: PHP CI/CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: 設置 PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.0.23'  # 改為您的項目兼容的版本
        extensions: mbstring, intl, pdo_mysql
        
    - name: 安裝依賴
      run: composer install --prefer-dist --no-progress
      
    - name: 複製環境設定
      run: cp .env.example .env
      
    - name: 生成應用程式金鑰
      run: php artisan key:generate
      
    - name: 執行測試
      run: vendor/bin/phpunit

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && github.event_name != 'pull_request'
    
    steps:
    - uses: actions/checkout@v3
      
    # 使用密碼驗證代替SSH金鑰
    - name: 使用密碼進行SSH連接
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        password: ${{ secrets.SSH_PASSWORD }}
        script: |
          echo "測試連接"
          whoami
          pwd
          echo "目前目錄:"
          ls -la

    # 部署到伺服器 - 使用密碼驗證
    - name: 使用密碼部署到伺服器
      if: success()
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        password: ${{ secrets.SSH_PASSWORD }}
        script: |
          # 安裝PHP和相關套件
          if ! command -v php &> /dev/null; then
            echo "安裝PHP..."
            apt-get update
            apt-get install -y software-properties-common
            add-apt-repository -y ppa:ondrej/php
            apt-get update
            apt-get install -y php8.0 php8.0-cli php8.0-common php8.0-mbstring php8.0-xml php8.0-zip php8.0-mysql php8.0-curl unzip
          fi
          
          # 安裝Composer
          if ! command -v composer &> /dev/null; then
            echo "安裝Composer..."
            curl -sS https://getcomposer.org/installer | php
            mv composer.phar /usr/local/bin/composer
            chmod +x /usr/local/bin/composer
          fi
          
          # 檢查和創建目錄
          if [ ! -d "${{ secrets.REMOTE_DIR }}" ]; then
            echo "創建目錄 ${{ secrets.REMOTE_DIR }}"
            mkdir -p ${{ secrets.REMOTE_DIR }}
          fi
          
          cd ${{ secrets.REMOTE_DIR }}
          
          # 檢查是否為git儲存庫
          if [ ! -d ".git" ]; then
            echo "初始化git儲存庫"
            git init
            git remote add origin https://github.com/a620906209/testSomething.git
          fi
          
          # 更新代碼和部署
          git fetch --all
          git reset --hard origin/master
          
          echo "安裝PHP依賴..."
          composer install --no-dev --optimize-autoloader
          
          # 如果.env文件不存在則創建
          if [ ! -f ".env" ]; then
            echo "創建環境文件..."
            cp .env.example .env
            php artisan key:generate
          fi
          
          echo "執行資料庫適配..."
          php artisan migrate --force
          
          echo "優化快取..."
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache
          
          echo "部署完成!"
        
    # 方法2已移除: 使用FTP部署到共享主機